{"version":3,"sources":["webpack:///./src/blog/category.js"],"names":["BlogIndex","render","posts","this","props","data","edges","hasNext","pageInfo","hasNextPage","category","pageContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_common_layouts__WEBPACK_IMPORTED_MODULE_2__","_common_seo__WEBPACK_IMPORTED_MODULE_6__","title","pageNumber","className","_components_breadcrumbs__WEBPACK_IMPORTED_MODULE_4__","lastName","lastPath","currentPage","map","_ref","node","_components_post_preview_js__WEBPACK_IMPORTED_MODULE_5__","fluidImage","frontmatter","postImage","childImageSharp","fluid","slug","date","description","metaDescription","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","nextPage","React","Component","blogListQuery"],"mappings":"oQASqBA,oGACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKH,MAAMI,MAC9BC,EAAUJ,KAAKC,MAAMC,KAAKH,MAAMM,SAASC,YACzCC,EAAWP,KAAKC,MAAMO,YAAYD,SACxC,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,MAAK,gBAAkBP,EAAlB,WAAqCP,KAAKC,MAAMO,YAAYO,aACnEN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,sDACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,qBAAd,gBAAgDT,IAElDE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,SAAUX,EACVY,SAAQ,GAAKZ,EACba,YAAW,QAAUpB,KAAKC,MAAMO,YAAYO,aAC7ChB,EAAMsB,IAAI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OACTd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,WAAYF,EAAKG,YAAYC,UAAUC,gBAAgBC,MACvDC,KAAMP,EAAKG,YAAYI,KACvBhB,MAAOS,EAAKG,YAAYZ,MACxBiB,KAAMR,EAAKG,YAAYK,KACvBxB,SAAUgB,EAAKG,YAAYnB,SAC3ByB,YAAaT,EAAKG,YAAYO,oBAElCxB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACZZ,GACGK,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CACElB,UAAU,gDACVmB,GAAInC,KAAKC,MAAMO,YAAY4B,UAF7B,sBA5BuBC,IAAMC,YAwChCC,EAAa","file":"component---src-blog-category-js-5d2f40f88f9045cb0e67.js","sourcesContent":["import React from 'react';\nimport Layout from '../common/layouts';\nimport { Link, graphql } from 'gatsby';\nimport Breadcrumbs from './components/breadcrumbs';\nimport Preview from './components/post-preview.js';\nimport Seo from '../common/seo';\nimport 'tachyons';\n\n\nexport default class BlogIndex extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges;\n    const hasNext = this.props.data.posts.pageInfo.hasNextPage;\n    const category = this.props.pageContext.category;\n    return (\n      <Layout>\n        <Seo\n          title={`Posts Tagged ${category} - Page ${this.props.pageContext.pageNumber}`} />\n        <div className=\"pv5 flex items-center justify-center bg-washed-red\">\n          <h1 className=\"fw1 tc f2 display\">Posts Tagged {category}</h1>\n        </div>\n        <div className=\"mw9 center\">\n          <Breadcrumbs\n            lastName={category}\n            lastPath={`${category}`}\n            currentPage={`Page ${this.props.pageContext.pageNumber}`} />\n          {posts.map(({node}) => (\n            <Preview\n              fluidImage={node.frontmatter.postImage.childImageSharp.fluid}\n              slug={node.frontmatter.slug}\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              category={node.frontmatter.category}\n              description={node.frontmatter.metaDescription} />\n          ))}\n          <div className=\"pv5 flex w-100\">\n            {hasNext &&\n                <Link\n                  className=\"dark-gray sans-serif ttu tracked no-underline\"\n                  to={this.props.pageContext.nextPage}>Next Page &rarr;</Link>\n            }\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\n\nexport const blogListQuery = graphql`\n  query categoryPosts($skip: Int!, $limit: Int!, $category: String!) {\n    posts: allMarkdownRemark(\n      filter: {frontmatter: {type: {eq: \"post\"}, category: {eq: $category}}},\n      sort: {fields: frontmatter___date, order: DESC},\n      limit: $limit,\n      skip: $skip,\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMM Do YYYY\")\n            category\n            metaDescription\n            slug\n            postImage {\n              childImageSharp {\n                fluid(maxWidth: 1080, maxHeight: 512) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n`\n"],"sourceRoot":""}